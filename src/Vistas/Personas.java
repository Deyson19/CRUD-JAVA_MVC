/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;

import Controllers.PersonaController;
import Controllers.RolesController;
import Models.Persona;
import Models.Roles;
import java.util.Date;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import Configuracion.GeneradorCorreos;
import java.util.Calendar;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

// CRUD Desarrollado por Deyson
public class Personas extends javax.swing.JFrame {

    private String _nombre, _apellidos, _correo, _pais, _profesion;
    private int rol;
    private String idPersona;
    // Crear una instancia de GeneradorCorreos
    GeneradorCorreos generadorCorreos = new GeneradorCorreos();

    /**
     * Creates new form Personas
     */
    public Personas() {
        initComponents();

        // Crear una instancia de RolesController para manejar los roles
        RolesController rolControl = new RolesController();

        // Obtener una lista de roles usando el método obtenerRoles() de la instancia
        // creada
        List<Roles> listaRoles = rolControl.obtenerRoles();

        // Recorrer la lista de roles usando un bucle for
        for (Roles rol : listaRoles) {
            // Agregar el nombre del rol al combo box cmbRoles
            cmbRoles.addItem(rol.getNombre());
        }

        // Centrar una imagen(en este caso) o un Label
        txtParaImagen.setHorizontalAlignment(JLabel.CENTER);
        txtParaImagen.setVerticalAlignment(JLabel.CENTER);

        // Agregar un DocumentListener al JTextField del nombre
        txt_Nombre.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                _nombre = txt_Nombre.getText();
                generarCorreo();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                _nombre = txt_Nombre.getText();
                generarCorreo();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                _nombre = txt_Nombre.getText();
                generarCorreo();
            }
        });
        // Agregar un DocumentListener al JTextField del apellido
        txt_Apellidos.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                _apellidos = txt_Apellidos.getText();
                generarCorreo();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                _apellidos = txt_Apellidos.getText();
                generarCorreo();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                _apellidos = txt_Apellidos.getText();
                generarCorreo();
            }
        });
        // Método para generar el correo electrónico

    }

    public void generarCorreo() {
        String nombre = txt_Nombre.getText().trim();
        String apellidos = txt_Apellidos.getText().trim();
        if (!nombre.isEmpty() && !apellidos.isEmpty()) {
            generadorCorreos.generarCorreo(nombre, apellidos);

        }
    }

    public boolean validarIdIngresado() {
        idPersona = txt_BuscarPersona.getText().trim();

        if (idPersona.equals("") || idPersona.equals("0")) {
            JOptionPane.showMessageDialog(null, "Error al tratar de capturar un ID", "Debes Ingresar Un ID",
                    JOptionPane.ERROR_MESSAGE);
            limpiarCamposFormulario();
            return false;
        } else {
            idPersona = txt_BuscarPersona.getText().trim();
            return true;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_Apellidos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_Correo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_Nombre = new javax.swing.JTextField();
        cmbRoles = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txt_Pais = new javax.swing.JTextField();
        txt_Profesion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jDateFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        txt_BuscarPersona = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btn_Eliminar = new javax.swing.JButton();
        btn_Consultar = new javax.swing.JButton();
        btn_Limpiar = new javax.swing.JButton();
        btn_Editar = new javax.swing.JButton();
        btn_Registrar = new javax.swing.JButton();
        txtParaImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CRUD de Personas en JAVA");
        setBackground(new java.awt.Color(85, 158, 142));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de la persona",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Dialog", 1, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setText("Apellidos");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setText("Correo");

        txt_Correo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_CorreoFocusGained(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setText("Fecha Nacimiento");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setText("Rol");

        cmbRoles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar Rol" }));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel7.setText("Pais");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel8.setText("Profesion");

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel9.setText("Buscar Persona");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                .addGap(59, 59, 59)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(txt_Profesion)
                                                .addGap(7, 7, 7))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(txt_Pais)
                                                .addGap(10, 10, 10))
                                        .addComponent(txt_Apellidos)
                                        .addComponent(txt_Correo)
                                        .addComponent(txt_Nombre, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jDateFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel4Layout.createSequentialGroup()
                                                        .addComponent(cmbRoles, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                Short.MAX_VALUE)
                                                        .addGap(104, 104, 104))
                                        .addComponent(txt_BuscarPersona))
                                .addContainerGap()));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(txt_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(txt_Apellidos, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_Correo, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jDateFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_Pais, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_Profesion, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(cmbRoles, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(txt_BuscarPersona, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        btn_Eliminar.setBackground(new java.awt.Color(255, 51, 51));
        btn_Eliminar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btn_Eliminar.setForeground(new java.awt.Color(255, 255, 255));
        btn_Eliminar.setText("Borrar");
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });

        btn_Consultar.setBackground(new java.awt.Color(102, 255, 102));
        btn_Consultar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btn_Consultar.setText("Consultar");
        btn_Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConsultarActionPerformed(evt);
            }
        });

        btn_Limpiar.setBackground(new java.awt.Color(51, 51, 255));
        btn_Limpiar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btn_Limpiar.setForeground(new java.awt.Color(51, 255, 255));
        btn_Limpiar.setText("Limpiar");
        btn_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LimpiarActionPerformed(evt);
            }
        });

        btn_Editar.setBackground(new java.awt.Color(51, 255, 255));
        btn_Editar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btn_Editar.setText("Editar");
        btn_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EditarActionPerformed(evt);
            }
        });

        btn_Registrar.setBackground(new java.awt.Color(255, 255, 51));
        btn_Registrar.setFont(new java.awt.Font("Lucida Bright", 1, 12)); // NOI18N
        btn_Registrar.setText("Registrar");
        btn_Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(btn_Registrar, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_Editar, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(79, 79, 79)
                                .addComponent(btn_Eliminar, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(63, 63, 63)
                                .addComponent(btn_Consultar, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_Limpiar, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btn_Registrar)
                                        .addComponent(btn_Editar)
                                        .addComponent(btn_Eliminar)
                                        .addComponent(btn_Consultar)
                                        .addComponent(btn_Limpiar))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        txtParaImagen.setForeground(java.awt.SystemColor.activeCaption);
        txtParaImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/personas.png"))); // NOI18N
        txtParaImagen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(274, 274, 274)
                                .addComponent(txtParaImagen, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(263, 263, 263))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtParaImagen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_CorreoFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_txt_CorreoFocusGained
        // TODO add your handling code here:
        generarCorreo();
        txt_Correo.setText(generadorCorreos.getCorreoGenerado());
    }// GEN-LAST:event_txt_CorreoFocusGained

    private void btn_RegistrarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_RegistrarActionPerformed

        Date fechaNacimiento = jDateFechaNacimiento.getDate(); // Obtiene la fecha de nacimiento ingresada
        Persona registrarPersona = new Persona(); // Crea un nuevo objeto Persona
        PersonaController nuevaPersona = new PersonaController(); // Crea un nuevo objeto controlador de Persona

        // Obtiene los valores de los campos de texto de la interfaz gráfica de usuario
        _nombre = txt_Nombre.getText();
        _apellidos = txt_Apellidos.getText();

        _correo = txt_Correo.getText();
        _profesion = txt_Profesion.getText();
        _pais = txt_Pais.getText();

        // Asigna el valor del rol seleccionado en un ComboBox
        switch (cmbRoles.getSelectedIndex()) {
            case 0:
                JOptionPane.showMessageDialog(null, "Debes Seleccionar un rol.");
                break;
            case 1:
                rol = 1;
                break;
            case 2:
                rol = 2;
                break;
            case 3:
                rol = 3;
                break;
            default:
                rol = 4;
        }

        // Establece los valores en el objeto Persona
        registrarPersona.setNombre(_nombre);
        registrarPersona.setApellidos(_apellidos);
        registrarPersona.setCorreo(_correo);
        registrarPersona.setPais(_pais);
        registrarPersona.setProfesion(_profesion);
        registrarPersona.setRol_id(rol);
        registrarPersona.setFecha_nacimiento(fechaNacimiento);

        // Envía el objeto Persona para crear una nueva entrada en la base de datos
        nuevaPersona.creacion(registrarPersona);
        limpiarCamposFormulario();

    }// GEN-LAST:event_btn_RegistrarActionPerformed

    private void btn_EditarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_EditarActionPerformed

        if (validarIdIngresado()) {
            Date fechaNacimiento = jDateFechaNacimiento.getDate();

            Persona actualizarPersona = new Persona();
            PersonaController edicionPersona = new PersonaController();

            _nombre = txt_Nombre.getText();
            _apellidos = txt_Apellidos.getText();
            _correo = txt_Correo.getText().trim();
            _profesion = txt_Profesion.getText();
            _pais = txt_Pais.getText();
            switch (cmbRoles.getSelectedIndex()) {
                case 0:
                    JOptionPane.showMessageDialog(null, "Debes Seleccionar un rol.");
                    break;
                case 1:
                    rol = 1;
                    break;
                case 2:
                    rol = 2;
                    break;
                case 3:
                    rol = 3;
                    break;
                case 4:
                    rol = 4;
                    break;
            }

            actualizarPersona.setNombre(_nombre);
            actualizarPersona.setApellidos(_apellidos);
            actualizarPersona.setCorreo(_correo);
            actualizarPersona.setPais(_pais);
            actualizarPersona.setProfesion(_profesion);
            actualizarPersona.setRol_id(rol);
            actualizarPersona.setFecha_nacimiento(fechaNacimiento);

            int id_persona = Integer.parseInt(idPersona);
            edicionPersona.actualziar(actualizarPersona, id_persona);
            limpiarCamposFormulario();
        }

    }// GEN-LAST:event_btn_EditarActionPerformed

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_EliminarActionPerformed
        PersonaController controladorEliminar = new PersonaController();

        int dialogResult = JOptionPane.showConfirmDialog(null, "¿Estás seguro de continuar con la eliminación?",
                "Confirmación", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            if (validarIdIngresado()) {
                idPersona = txt_BuscarPersona.getText().trim();
                controladorEliminar.eliminar(Integer.parseInt(idPersona));
                limpiarCamposFormulario();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Entendido, continúa usando el programa.", "PERFECTO",
                    JOptionPane.INFORMATION_MESSAGE);
        }

    }

    private void btn_ConsultarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_ConsultarActionPerformed
        // TODO add your handling code here:
        PersonaController controladorBuscar = new PersonaController();

        txt_BuscarPersona.setEditable(false);
        if (validarIdIngresado()) {
            Persona buscarPersona = controladorBuscar.lectura(Integer.parseInt(idPersona));

            if (buscarPersona != null) {
                txt_Apellidos.setText(buscarPersona.getApellidos());
                txt_Correo.setText(buscarPersona.getCorreo());
                txt_Nombre.setText(buscarPersona.getNombre());
                txt_Pais.setText(buscarPersona.getPais());
                txt_Profesion.setText(buscarPersona.getProfesion());

                switch (buscarPersona.getRol_id()) {
                    case 1:
                        cmbRoles.setSelectedIndex(0);
                        break;
                    case 2:
                        cmbRoles.setSelectedIndex(1);
                        break;
                    case 3:
                        cmbRoles.setSelectedIndex(2);
                        break;
                    case 4:
                        cmbRoles.setSelectedIndex(3);
                        break;
                }
                jDateFechaNacimiento.setDate(buscarPersona.getFecha_nacimiento());
            } else {
                JOptionPane.showMessageDialog(null, "No se encontraron registros en la BD");
                limpiarCamposFormulario();
            }
        }

    }// GEN-LAST:event_btn_ConsultarActionPerformed

    private void btn_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btn_LimpiarActionPerformed
        // TODO add your handling code here:
        int dialogResult = JOptionPane.showConfirmDialog(null, "¿Estás seguro de limpiar todos los campos?",
                "Confirmación", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            limpiarCamposFormulario();
        } else {
            // Aquí colocas el código a ejecutar si el usuario hizo clic en "No"
        }

    }// GEN-LAST:event_btn_LimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException
                | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Personas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        }
        // </editor-fold>

        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Personas().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Consultar;
    private javax.swing.JButton btn_Editar;
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_Limpiar;
    private javax.swing.JButton btn_Registrar;
    private javax.swing.JComboBox<String> cmbRoles;
    private com.toedter.calendar.JDateChooser jDateFechaNacimiento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel txtParaImagen;
    private javax.swing.JTextField txt_Apellidos;
    private javax.swing.JTextField txt_BuscarPersona;
    private javax.swing.JTextField txt_Correo;
    private javax.swing.JTextField txt_Nombre;
    private javax.swing.JTextField txt_Pais;
    private javax.swing.JTextField txt_Profesion;
    // End of variables declaration//GEN-END:variables

    private void limpiarCamposFormulario() {
        txt_Apellidos.setText("");
        txt_Correo.setText("");
        txt_Nombre.setText("");
        txt_Pais.setText("");
        txt_Profesion.setText("");
        // Obtener la fecha actual
        Calendar calendar = Calendar.getInstance();
        Date fechaActual = calendar.getTime();

        // Restar n días
        int diasARestar = (int) (Math.random() * 30); // modificar según necesidad
        calendar.add(Calendar.DAY_OF_MONTH, -diasARestar);

        // Obtener la nueva fecha
        Date nuevaFecha = calendar.getTime();

        // Setear la nueva fecha al jDateFechaNacimiento
        jDateFechaNacimiento.setDate(nuevaFecha);

        cmbRoles.setSelectedIndex(0);
        txt_BuscarPersona.setEditable(true);

        txt_BuscarPersona.setText("");
    }
}
